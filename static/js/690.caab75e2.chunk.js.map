{"version":3,"file":"static/js/690.caab75e2.chunk.js","mappings":"+NAGA,MCH+D,GAAgBA,aDG1D,CACjBC,KAAM,gBACNC,QAAS,yNAMTC,YAAa,0DACbC,YAAa,qBACbC,IAAK,wOAkBLC,QAAS,CACLC,QAAQ,EACRC,UAAW,sBACXC,MAAO,+DAGPC,KAAM,CAAC,CACXC,MAAO,eACPR,YAAa,uFACbS,KAAM,o+DA6DNC,MAAO,CAAC,CACRZ,KAAM,gBACNG,YAAa,iCACbU,gBAAiB,sDACjBC,UAAW,GACb,CACEd,KAAM,cACNG,YAAa,mBACbW,UAAW,GACb,CACEd,KAAM,SACNG,YAAa,SACbW,UAAW,KAEb,CACEJ,MAAO,oBACPR,YAAa,6CACbS,KAAM,w4BAgCNC,MAAO,CAAC,CACRZ,KAAM,gBACNG,YAAa,iCACbU,gBAAiB,sDACjBC,UAAW,GACb,CACEd,KAAM,SACNG,YAAa,SACbW,UAAW,SC7JFC,EAAW,CAAC,KAAO,gBAAgB,QAAU,QAAQ,gBAAe,EAAK,aAAa,iBAAiB,QAAU,CAAC,CAAC,KAAO,gBAAgB,QAAU,gDAAgD,YAAc,0DAAa,YAAc,uB","sources":["../../README.md","../node_modules/readme/modules.js"],"sourcesContent":["import * as component_1 from '@kne/current-lib_scroll-loader';\nimport * as component_2 from '@kne/react-fetch';\nimport * as component_3 from 'lodash';\nconst readmeConfig = {\n    name: `scroll-loader`,\n    summary: `<h1>scroll-loader</h1>\n<h3>描述</h3>\n<p>滚动加载下一页数据.</p>\n<h3>安装</h3>\n<pre><code class=\"language-shell\">npm i --save @kne/scroll-loader\n</code></pre>`,\n    description: `滚动加载下一页数据.`,\n    packageName: `@kne/scroll-loader`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `scroll_loader_f2ee2`,\n        style: `.scroll_loader_f2ee2 .scroll-list {\n  max-height: 300px;\n}`,\n        list: [{\n    title: `ScrollLoader`,\n    description: `滚动到底后自动加载下一页数据`,\n    code: `const { get, merge, range } = lodash;\nconst { default: Fetch } = _reactFetch;\nconst { default: ScrollLoader } = _ScrollLoader;\n\nconst BaseExample = () => {\n  return (<Fetch\n    loader={({ data }) => {\n      const params = Object.assign({\n        perPage: 20, currentPage: 1\n      }, data);\n      return new Promise((resolve) => {\n        const start = (params.currentPage - 1) * params.perPage;\n        setTimeout(() => {\n          resolve({\n            totalCount: 100, pageData: range(start, start + params.perPage).map((key) => {\n              return {\n                label: \\`第\\${key + 1}项\\`, value: key + 1\n              };\n            })\n          });\n        }, 500);\n      });\n    }}\n    render={(fetchApi) => {\n      const pagination = {\n        paramsType: 'data', current: 'currentPage', pageSize: 'perPage', defaultPageSize: 20\n      };\n      const current = get(fetchApi.requestParams, [pagination.paramsType, pagination.current], 1),\n        pageSize = get(fetchApi.requestParams, [pagination.paramsType, pagination.pageSize]) || pagination.defaultPageSize;\n\n      const formatData = {\n        list: fetchApi.data.pageData, total: fetchApi.data.totalCount\n      };\n      return (<ScrollLoader\n        completeTips=\"\"\n        className=\"scroll-list\"\n        isLoading={!fetchApi.isComplete}\n        noMore={!formatData.total || current * pageSize >= formatData.total}\n        onLoader={async () => {\n          await fetchApi.loadMore(merge({\n            data: {\n              [pagination.pageSize]: pageSize, [pagination.current]: current + 1\n            }\n          }), (data, newData) => {\n            return Object.assign({}, newData, {\n              pageData: data.pageData.concat(newData.pageData)\n            });\n          });\n        }}\n      >\n        {formatData.list.map((item) => {\n          return <div key={item.value}>{item.label}</div>;\n        })}\n      </ScrollLoader>);\n    }}\n  />);\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ScrollLoader\",\n    packageName: \"@kne/current-lib_scroll-loader\",\n    importStatement: \"import * as _ScrollLoader from \\\"@kne/scroll-loader\\\"\",\n    component: component_1\n},{\n    name: \"_reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_2\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_3\n}]\n},{\n    title: `FetchScrollLoader`,\n    description: `封装了数据获取`,\n    code: `const { get, merge, range } = lodash;\nconst { FetchScrollLoader } = _ScrollLoader;\n\nconst BaseExample = () => {\n  return <FetchScrollLoader className=\"scroll-list\" api={{\n    loader: ({ data }) => {\n      const params = Object.assign({\n        perPage: 20, currentPage: 1\n      }, data);\n      return new Promise((resolve) => {\n        const start = (params.currentPage - 1) * params.perPage;\n        setTimeout(() => {\n          resolve({\n            totalCount: 100, pageData: range(start, start + params.perPage).map((key) => {\n              return {\n                label: \\`第\\${key + 1}项\\`, value: key + 1\n              };\n            })\n          });\n        }, 500);\n      });\n    }\n  }}>{({ list }) => {\n    return list.map((item) => {\n      return <div key={item.value}>{item.label}</div>;\n    });\n  }}</FetchScrollLoader>;\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ScrollLoader\",\n    packageName: \"@kne/current-lib_scroll-loader\",\n    importStatement: \"import * as _ScrollLoader from \\\"@kne/scroll-loader\\\"\",\n    component: component_1\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_3\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import ScrollLoader from '@components/scroll-loader/README.md';export default {ScrollLoader};\nexport const manifest = {\"name\":\"scroll-loader\",\"version\":\"0.1.7\",\"open-version\":true,\"public-url\":\"/scroll-loader\",\"modules\":[{\"name\":\"scroll-loader\",\"baseDir\":\"/home/runner/work/scroll-loader/scroll-loader\",\"description\":\"滚动加载下一页数据.\",\"packageName\":\"@kne/scroll-loader\"}]};"],"names":["ScrollLoader","name","summary","description","packageName","api","example","isFull","className","style","list","title","code","scope","importStatement","component","manifest"],"sourceRoot":""}