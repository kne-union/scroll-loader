{"version":3,"file":"static/js/35.148e9503.chunk.js","mappings":"+RASA,MAAMA,EAAiBC,IAAgD,IAA/C,eAAEC,EAAc,SAAEC,EAAQ,aAAEC,GAAcH,EAChE,MAAMI,GAAgBC,EAAAA,EAAAA,GAAeH,GAC/BI,GAAcD,EAAAA,EAAAA,GAAeJ,GAiBnC,OAhBAM,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAAWL,EACf,MAAMM,EAAWH,IACXJ,EAAWQ,UACXD,EAASE,eAAiBF,EAASG,cAAgBJ,EAAW,UAC1DJ,IAAgBS,MAAK,IAClB,IAAIC,SAAQC,IACjBC,WAAWD,EAAS,IAAI,MAG5BP,UACMN,IACR,EAEFA,GAAU,GACT,CAACC,EAAcC,EAAeE,IAC1B,IAAI,EAGPW,GAAeC,EAAAA,EAAAA,aAAW,CAACC,EAAOC,KACtC,MAAMC,EAASC,OAAOC,OACpB,CAAC,EACD,CACEC,aAAc,4BAEhBL,EAAME,SAEF,UAAEI,EAAS,OAAEC,EAAM,SAAEC,EAAQ,UAAEC,EAAS,aAAEC,EAAY,aAAE1B,EAAY,SAAE2B,GAAaR,OAAOC,OAC9F,CAAC,EACD,CACEpB,aAAc,EACd0B,aAAcR,EAAOG,cAEvBL,EACA,CAAEE,WAEEU,GAAcC,EAAAA,EAAAA,UACdC,GAAkB5B,EAAAA,EAAAA,GAAesB,GACjCO,GAAaF,EAAAA,EAAAA,SAAQN,IAAWE,GACtCM,EAAWC,SAAWT,IAAWE,GAEjCQ,EAAAA,EAAAA,qBAAoBhB,GAAK,IAChBW,EAAYI,SAClB,IACH,MAAME,GAAgBC,EAAAA,EAAAA,KAAqBC,IACzC,MAAMC,EAAKD,EAAEE,OACTP,EAAWC,SAAWK,EAAG7B,aAAe6B,EAAGE,UAAY,GAAKF,EAAG5B,cACjEqB,GACF,GACC,KAEH,OACEU,IAAAA,cAACC,EAAAA,EAAS,CACRnB,UAAWoB,IAAW,iBAAkBpB,GACxCqB,oBAAqB,CACnB1B,IAAKW,EACLgB,SAAUV,KAGVT,IAAcF,GAAUiB,IAAAA,cAAC5C,EAAc,CAACI,aAAcA,EAAcF,eAAgBA,IAAM8B,EAAYI,QAASjC,SAAU+B,IAC3HU,IAAAA,cAACK,EAAAA,MAAK,CAACC,UAAU,YACfN,IAAAA,cAAM,WAAAb,GACLF,EACCe,IAAAA,cAAA,OAAKlB,UAAWyB,EAAM,qBACpBP,IAAAA,cAACQ,EAAAA,KAAI,CAACC,KAAK,WAEX,KACH1B,GAAUG,EAAec,IAAAA,cAAA,OAAKlB,UAAWyB,EAAM,qBAAsBrB,GAAsB,MAEpF,G","sources":["../../src/index.js"],"sourcesContent":["import React, { forwardRef, useEffect, useImperativeHandle, useRef } from 'react';\nimport { Space, Spin } from 'antd';\nimport SimpleBar from 'simplebar-react';\nimport style from './style.module.scss';\nimport 'simplebar-react/dist/simplebar.min.css';\nimport { useThrottledCallback } from 'use-debounce';\nimport useRefCallback from '@kne/use-ref-callback';\nimport classnames from 'classnames';\n\nconst FullDataInList = ({ getScrollerRef, loadMore, maxFullCount }) => {\n  const loaderHandler = useRefCallback(loadMore);\n  const getScroller = useRefCallback(getScrollerRef);\n  useEffect(() => {\n    let maxCount = maxFullCount;\n    const scroller = getScroller();\n    const loadMore = async () => {\n      if (scroller.clientHeight === scroller.scrollHeight && maxCount > 0) {\n        await loaderHandler().then(() => {\n          return new Promise(resolve => {\n            setTimeout(resolve, 500);\n          });\n        });\n        maxCount--;\n        await loadMore();\n      }\n    };\n    loadMore();\n  }, [maxFullCount, loaderHandler, getScroller]);\n  return null;\n};\n\nconst ScrollLoader = forwardRef((props, ref) => {\n  const locale = Object.assign(\n    {},\n    {\n      loadComplete: '加载完成'\n    },\n    props.locale\n  );\n  const { className, noMore, onLoader, isLoading, completeTips, maxFullCount, children } = Object.assign(\n    {},\n    {\n      maxFullCount: 3,\n      completeTips: locale.loadComplete\n    },\n    props,\n    { locale }\n  );\n  const scrollerRef = useRef();\n  const onLoaderHandler = useRefCallback(onLoader);\n  const canLoadRef = useRef(!noMore && !isLoading);\n  canLoadRef.current = !noMore && !isLoading;\n\n  useImperativeHandle(ref, () => {\n    return scrollerRef.current;\n  }, []);\n  const scrollHandler = useThrottledCallback(e => {\n    const el = e.target;\n    if (canLoadRef.current && el.clientHeight + el.scrollTop + 20 > el.scrollHeight) {\n      onLoaderHandler();\n    }\n  }, 100);\n\n  return (\n    <SimpleBar\n      className={classnames('load-container', className)}\n      scrollableNodeProps={{\n        ref: scrollerRef,\n        onScroll: scrollHandler\n      }}\n    >\n      {!isLoading && !noMore && <FullDataInList maxFullCount={maxFullCount} getScrollerRef={() => scrollerRef.current} loadMore={onLoaderHandler} />}\n      <Space direction=\"vertical\">\n        <div>{children}</div>\n        {isLoading ? (\n          <div className={style['scroller-no-more']}>\n            <Spin size=\"small\" />\n          </div>\n        ) : null}\n        {noMore && completeTips ? <div className={style['scroller-no-more']}>{completeTips}</div> : null}\n      </Space>\n    </SimpleBar>\n  );\n});\n\nexport default ScrollLoader;\n"],"names":["FullDataInList","_ref","getScrollerRef","loadMore","maxFullCount","loaderHandler","useRefCallback","getScroller","useEffect","maxCount","scroller","async","clientHeight","scrollHeight","then","Promise","resolve","setTimeout","ScrollLoader","forwardRef","props","ref","locale","Object","assign","loadComplete","className","noMore","onLoader","isLoading","completeTips","children","scrollerRef","useRef","onLoaderHandler","canLoadRef","current","useImperativeHandle","scrollHandler","useThrottledCallback","e","el","target","scrollTop","React","SimpleBar","classnames","scrollableNodeProps","onScroll","Space","direction","style","Spin","size"],"sourceRoot":""}